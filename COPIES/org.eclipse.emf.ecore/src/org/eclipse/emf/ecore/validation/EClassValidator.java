/**
 *
 * $Id$
 */
package org.eclipse.emf.ecore.validation;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EGenericType;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EOperation;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.emf.ecore.EStructuralFeature;

/**
 * A sample validator interface for {@link org.eclipse.emf.ecore.EClass}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface EClassValidator {
	boolean validate();

	boolean validateAbstract(boolean value);
	boolean validateInterface(boolean value);
	boolean validateESuperTypes(EList<EClass<?>> value);
	boolean validateEOperations(EList<EOperation<EObject, ?>> value);
	boolean validateEAllAttributes(EList<EAttribute<? super EObject, ?>> value);
	boolean validateEAllReferences(EList<EReference<? super EObject, ?>> value);
	boolean validateEReferences(EList<EReference<EObject, ?>> value);
	boolean validateEAttributes(EList<EAttribute<EObject, ?>> value);
	boolean validateEAllContainments(EList<EReference<EObject, ?>> value);
	boolean validateEAllOperations(EList<EOperation<? super EObject, ?>> value);
	boolean validateEAllStructuralFeatures(EList<EStructuralFeature<EObject, ?>> value);
	boolean validateEAllSuperTypes(EList<EClass<?>> value);
	boolean validateEIDAttribute(EAttribute<EObject, ?> value);
	boolean validateEStructuralFeatures(EList<EStructuralFeature<EObject, ?>> value);
	boolean validateEGenericSuperTypes(EList<EGenericType> value);
	boolean validateEAllGenericSuperTypes(EList<EGenericType> value);
}
